/* tslint:disable */
/* eslint-disable */
/**
 * Disclone Proxy API
 * Basic API proxy for Disclone
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
} from './Group';

/**
 * 
 * @export
 * @interface Groups
 */
export interface Groups {
    /**
     * 
     * @type {Array<Group>}
     * @memberof Groups
     */
    groups: Array<Group>;
}

/**
 * Check if a given object implements the Groups interface.
 */
export function instanceOfGroups(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "groups" in value;

    return isInstance;
}

export function GroupsFromJSON(json: any): Groups {
    return GroupsFromJSONTyped(json, false);
}

export function GroupsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Groups {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'groups': ((json['groups'] as Array<any>).map(GroupFromJSON)),
    };
}

export function GroupsToJSON(value?: Groups | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groups': ((value.groups as Array<any>).map(GroupToJSON)),
    };
}

